{{- define "StorageClassFilesystem-default" -}}
{{- if .Values.cephfs.enabled -}}
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
   name: rook-ceph-filesystem
provisioner: rook-ceph.cephfs.csi.ceph.com
parameters:
    # clusterID is the namespace where the rook cluster is running
    # If you change this namespace, also change the namespace below where the secret namespaces are defined
    clusterID: {{ .Release.Namespace }}

    # CephFS filesystem name into which the volume shall be created
    fsName: rook-cephfs

    # Ceph pool into which the volume shall be created
    # Required for provisionVolume: "true"
    pool: rook-cephfs-data0

    # The secrets contain Ceph admin credentials. These are generated automatically by the operator
    # in the same namespace as the cluster.
    csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
    csi.storage.k8s.io/provisioner-secret-namespace: {{ .Release.Namespace }} # namespace:cluster
    csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
    csi.storage.k8s.io/controller-expand-secret-namespace: {{ .Release.Namespace }} # namespace:cluster
    csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
    csi.storage.k8s.io/node-stage-secret-namespace: {{ .Release.Namespace }} # namespace:cluster

reclaimPolicy: Delete
allowVolumeExpansion: true
...
{{- end -}}
{{- end -}}
{{- include "helpers.template.overlay" ( dict "Global" $ "template_definition" "StorageClassFilesystem-default" ) }}
